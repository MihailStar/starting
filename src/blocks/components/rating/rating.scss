.rating {
  $font-size: ($base-unit * 4);
  $number-of: 10;
  @extend %border-box;
  position: relative;
  display: inline-block;
  flex-shrink: 0;
  width: (($base-unit * 10) * $number-of / $font-size * 1em);
  height: (($base-unit * 10) / $font-size * 1em);
  padding-top: 0;
  padding-right: 0;
  padding-bottom: 0;
  padding-left: 0;
  margin-top: 0;
  margin-right: 0;
  margin-bottom: 0;
  margin-left: 0;
  font-size: $font-size;
  vertical-align: middle;
  background-color: $color-body;
  background-image: url('../images/star-outline.svg');
  background-repeat: repeat-x;
  background-size: (($base-unit * 10) / $font-size * 1em)
    (($base-unit * 10) / $font-size * 1em);
  border: 0;
  border-radius: (($base-unit * 1) / $font-size * 1em);
  box-shadow: inset 0 0 0 1px $color-line;

  &:focus-within,
  &:hover {
    background-color: darken($color-body, 5%);
    box-shadow: inset 0 0 0 1px darken($color-line, 5%);
  }

  &__element {
    position: absolute;
    top: 0;
    left: 0;
    width: (($base-unit * 10) / $font-size * 1em);
    height: (($base-unit * 10) / $font-size * 1em);
    margin-top: 0;
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
    font-size: inherit;
    vertical-align: middle;
    cursor: pointer;
    background-repeat: repeat-x;
    background-size: (($base-unit * 10) / $font-size * 1em)
      (($base-unit * 10) / $font-size * 1em);
    border: 0;
    transition: $transition-duration;
    appearance: none;

    @for $index from 1 through $number-of {
      &:nth-of-type(#{$index}) {
        z-index: ($number-of - $index + 1);
        width: (($base-unit * 10) * $index / $font-size * 1em);
      }
    }

    &::-ms-check {
      display: none;
    }

    &:focus {
      outline: 0;
    }

    &:checked,
    &:hover {
      background-image: url('../images/star.svg');
    }

    &:hover ~ .rating__element {
      background-image: none;
    }
  }
}
